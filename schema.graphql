type _Schema_
  @fulltext(
    name: "orderSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Order"
        fields: [{ name: "title" }, { name: "description" }]
      }
    ]
  )

type OrderBook @entity {
  id: ID!
  orders: [Order!]!
  fee: BigInt!
  owner: Bytes!
}

type Order @entity {
  id: ID!
  address: Bytes!
  uri: String!
  title: String
  description: String
  primaryImage: String
  encryptionPublicKey: String
  priceSuggested: String
  stakeSuggested: String
  error: String
  offers: [Offer!]!
  offerCount: BigInt!
  token: Token
  tokenAddress: Bytes!
  maker: Bytes!
  timeout: BigInt!
  createdAt: BigInt!
  offerSchema: String
  offerSchemaUri: String
}

enum OfferState {
  Closed
  Open
  Committed
}

type OfferTransition @entity {
  id: ID!
  timestamp: BigInt!
  state: OfferState!
  makerCanceled: Boolean!
  takerCanceled: Boolean!
}

type Offer @entity {
  id: ID!
  index: BigInt!
  taker: Bytes!
  price: BigInt!
  cost: BigInt!
  stake: BigInt!
  uri: String!
  messagePublicKey: String!,
  messageNonce: String!,
  message: String!,
  timestamp: BigInt!
  state: OfferState!
  order: Order
  acceptedAt: BigInt!
  makerCanceled: Boolean!
  takerCanceled: Boolean!
  history: [OfferTransition!]!
}

type Token @entity {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimals: BigInt!
}
