type _Schema_
  @fulltext(
    name: "sellOrderSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "SellOrder"
        fields: [{ name: "title" }, { name: "description" }]
      }
    ]
  )

type OrderBook @entity {
  id: ID!
  orders: [SellOrder!]!
  fee: BigInt!
  owner: Bytes!
}

type SellOrder @entity {
  id: ID!
  address: Bytes!
  uri: String!
  sellersStake: BigInt!
  title: String
  description: String
  primaryImage: String
  encryptionPublicKey: String
  priceSuggested: String
  stakeSuggested: String
  error: String
  offers: [Offer!]!
  offerCount: BigInt!
  token: Token
  tokenAddress: Bytes!
  seller: Bytes!
  timeout: BigInt!
  createdAt: BigInt!
  buyerSchema: String
}

enum OfferState {
  Closed
  Open
  Committed
  Confirmed
  Canceled
  Enforced
}

type OfferTransition @entity {
  id: ID!
  timestamp: BigInt!
  state: OfferState!
  sellerCanceled: Boolean!
  buyerCanceled: Boolean!
}

type Offer @entity {
  id: ID!
  buyer: Bytes!
  index: BigInt!
  quantity: BigInt!
  pricePerUnit: BigInt!
  stakePerUnit: BigInt!
  uri: String!
  messagePublicKey: String!,
  messageNonce: String!,
  message: String!,
  timestamp: BigInt!
  state: OfferState!
  sellOrder: SellOrder
  seller: Bytes!
  acceptedAt: BigInt!
  sellerCanceled: Boolean!
  buyerCanceled: Boolean!
  history: [OfferTransition!]!
}

type Token @entity {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimals: BigInt!
}
